<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="ie=edge" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"
        />
        <script
            src="https://www.paypal.com/sdk/js?components=buttons,hosted-fields&merchant-id=<%= owner.paypalBusinessId %>&client-id=<%= clientId %>&intent=capture&currency=EUR"

            data-client-token="<%= clientToken %>"
        ></script>
        <title>Paypal</title>
        <style>
            * {
                box-sizing: border-box;
            }
            body {
                margin: 0;
                padding: 20px;
                width: 100%;
                height: 100%;
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: center;
                overflow: hidden;
            }
            button {
                all: unset;
                text-align: center;
                padding: 5px 20px;
                background-color: rgb(143, 65, 158);
                color: white;
                text-transform: uppercase;
            }
            #card-form {
                background-color: rgb(247, 247, 247);
                width: 100%;
                display: flex;
                flex-direction: column;
            }
            #card-form > div {
                width: 100%;
                height: 100%;
                display: contents;
                flex-direction: column;
                position: relative;
                background-color: greenyellow;
                font-size: 24;
            }
            #card-form > div > div {
                display: flex;
            }
            #card-form > div > label {
                width: 100%;
            }
            #paypal-button {
            }
            .card_field {
                height: 40px;
                padding: 0px 10px;
                font-size: 24;
            }
        </style>
    </head>

    <body id="body">
        <h2><%= party.name %></h2>
        <form id="card-form">
            <p hidden id="party-id"><%= party.id %></p>
            <p hidden id="customer-id"><%= customer.id %></p>
            <div>
                <div id="card-number" class="card_field"></div>
                <div>
                    <div id="expiration-date" class="card_field"></div>
                    <div id="cvv" class="card_field"></div>
                </div>
            </div>
            <button type="submit">submit</button>
        </form>
        <div id="paypal-button"></div>
    </body>

    <script defer>
        function message(type, message = "") {
            if(!window.ReactNativeWebView) return;
            window.ReactNativeWebView.postMessage(
                JSON.stringify({
                    type, 
                    message
                }));
        }
        function processOrderData(orderData){
            /*
            let errorDetail =
                Array.isArray(orderData.details) &&
                orderData.details[0];
            if (errorDetail) {
                let msg =
                    "Sorry, your transaction could not be processed.";
                if (errorDetail.description)
                    msg += "\n\n" + errorDetail.description;
                if (orderData.debug_id)
                    msg += " (" + orderData.debug_id + ")";
                return message("error", msg) // Show a failure message
            }
            // Show a success message or redirect*/
            if (orderData.error) message("error", orderData.msg)
            // I don't know if this is a good idea...
            //if (orderData.canceled) message("canceled", orderData.msg)
            if (orderData.success) message("success", orderData.msg);
}
    paypal.Buttons({
        fundingSource: paypal.FUNDING.PAYPAL,
        createOrder: () => {
            return buyTicket().then((res) => {
                orderId = res.customId;
                return res.id;
            });
        },
        onApprove: () => {
            fetch(`/confirm-email/${orderId}`)
                .then((res) => res.json())
                .then(processOrderData);
        },
        onCancel: ()=>{
            fetch(`/cancel-order/${orderId}`, {
                method: "DELETE"
            }).then((res) => res.json())
            .then(processOrderData)
        }
    })
    .render("#paypal-button");

    async function buyTicket() {
        //let res0 = await fetch("/buy");]=
        const partyId = document.getElementById("party-id").innerText;
        const customerId = document.getElementById("customer-id").innerText;
        const body = {
            partyId: partyId,
            customerId: customerId,
        };

        let res = await fetch("/buy", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(body),
        });
        res = await res.json();

        return res;
    }
    if (!paypal.HostedFields.isEligible() && window.ReactNativeWebView) { 
        message("error", "cannot load paypal...")
    }
    if (paypal.HostedFields.isEligible()) {

            let orderId;
            const form = document.getElementById("card-form");
            const inputs = document.getElementsByClassName("card_field");
            const body = document.getElementById("body");
            paypal.HostedFields.render({
                createOrder: () => {
                    return buyTicket().then((res) => {
                        orderId = res.customId;
                        return res.id;
                    });
                    // needed later to complete capture
                },
                styles: {
                    input: {
                        "font-size": "18px",
                        padding: "5px",
                    },
                    ".valid": {
                        color: "green",
                    },
                    ".invalid": {
                        color: "red",
                    },
                },
                fields: {
                    number: {
                        selector: "#card-number",
                        placeholder: "Card Number",
                        maxCardLength: 16,
                    },
                    expirationDate: {
                        selector: "#expiration-date",
                        placeholder: "MM/YY",
                    },
                    cvv: {
                        selector: "#cvv",
                        placeholder: "CVV",
                    },
                },
            })
                .then((cardFields) => {
                    document
                        .querySelector("#card-form")
                        .addEventListener("submit", (event) => {

                            event.preventDefault();
                            message("loading")
                            //window.ReactNativeWebView.postMessage("submit");
                            cardFields
                                .submit({})
                                .then(() => {
                                    return fetch(`/confirm-email/${orderId}`);
                                })
                                .then((res) => res.json())
                                .then(processOrderData)
                        });
                }).then(() => {
                    message("loaded")
                })
                .catch((err) => {
                    
                    //;if(err) alert("Payment could not be captured! " + JSON.stringify(err));
                });
        }
    </script>
</html>
